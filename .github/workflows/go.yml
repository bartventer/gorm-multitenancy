name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest] # cannot run on windows and macos due to postgres
        go-version: [1.21.x, 1.22.x]
    
    runs-on: ${{ matrix.os }}
    env:
      DB_NAME: test_tenants
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_PORT: 5432
      DB_HOST: localhost
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        volumes:
          - db-data:/var/lib/postgresql/data
    steps:

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: go mod download

    - name: Build
      run: make build

    - name: Test and Coverage
      run: make cover
      
    - uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: ./tmp/cover.out

  license-scan:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - name: Install FOSSA
        run: |
          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh | bash
  
      - name: Run FOSSA analysis
        env:
          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}
        run: fossa analyze
  
      - name: Check FOSSA status
        env:
          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}
        run: fossa test
  
  semantic-release:
    needs: [license-scan]
    runs-on: ubuntu-latest
    permissions: 
      contents: write
      issues: write
    steps:
      - uses: actions/checkout@v4
      - name: Run semantic-release
        if: github.repository == 'bartventer/gorm-multitenancy' && github.event_name == 'push'
        run: |
          yarn global add semantic-release@17
          semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}